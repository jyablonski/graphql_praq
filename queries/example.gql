# Query 1
{
  books {
    title
    author
  }
}

# Query 2
{
  players {
    name
    team
    ppg
  }

}

# Query 3 fully functional query which scrapes remote sql and returns data in graphql
{
  allTeams {
      rank
      team
      teamFull
      conference
      wins
      losses
      gamesPlayed
      winPct
      activeInjuries
      activeProtocols
      last10
  }
}

# Query 4 adding dynamic limit
{
  allTeams (limit: 1){
      rank
      team
      teamFull
      conference
      wins
      losses
      gamesPlayed
      winPct
      activeInjuries
      activeProtocols
      last10
  }
}

# Query 5 adding a filter condition to limit return set
{
  specificTeams (teamStr: "MIA", limit: 30){
      rank
      team
      teamFull
      conference
      wins
      losses
      gamesPlayed
      winPct
      activeInjuries
      activeProtocols
      last10
  }
}

# Query 6 - nullable columns
{
  scorerStats (limit: 500){
      player
      team
      fullTeam
      seasonAvgPpg
      playoffsAvgPpg
      seasonTsPercent
      playoffsTsPercent
      gamesPlayed
      playoffsGamesPlayed
      ppgRank
      top20Scorers
      playerMvpCalcAdj
      gamesMissed
      penalizedGamesMissed
      top5Candidates
      mvpRank
  }
}

# Query 7 - Team Ratings
{
  teamRatings {
    team
    teamAcronym
    w
    l
    ortg
    drtg
    nrtg
    teamLogo
    nrtgRank
    drtgRank
    ortgRank
  }
}

# Query 8 - Twitter Comments
{
  twitterComments {
    scrapeDate
    username
    tweet
    url
    likesCount
    retweetsCount
    repliesCount
    compound
    neg
    neu
    pos
  }
}

# Query 9 - Reddit Comments
{
  redditComments {
    scrapeDate
    author
    comment
    flair
    score
    url
    compound
    neg
    neu
    pos
  }
}

# Query 10 - Injuries
{
  injuries {
    player
    teamAcronym
    team
    date
    status
    injury
    description
    totalInjuries
    teamActiveInjuries
    teamActiveProtocols
  }
}

# Query 11 - Game Types
{
  gameTypes {
    gameType
    type
    n
    explanation
  }
}